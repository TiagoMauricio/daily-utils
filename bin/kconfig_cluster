#!/bin/bash
source colors

usage() {
  cat <<EOF
Usage: kube_cluster_config -t type [-r region] -n name [--delete]

  -t    currently only supports 'eks'

  -r    the AWS region of the cluster, defaults to AWS_DEFAULT_REGION

  -n    the name of the cluster to configure


Requirements:
  - AWS CLI
  - AWS credentials set
  - kubectl installed
EOF
  exit 1
}
get_cluster_name(){
  kubectl config get-contexts $NAME --no-headers | awk '{ print $3 }'
}

configure_eks () {
  aws eks --region $REGION update-kubeconfig --name $NAME --alias $NAME
}

delete_config () {
  CLUSTER_NAME=`get_cluster_name`
  kubectl config delete-cluster $CLUSTER_NAME
  kubectl config delete-context $NAME
  kubectl config delete-user $CLUSTER_NAME
}

while getopts ":t:n:r:-:" opt; do
  case $opt in
    n)
      NAME=${OPTARG}
      ;;
    t)
      TYPE=${OPTARG}
      ;;
    r)
      REGION=${OPTARG}
      ;;
    -)
      case $OPTARG in
        "delete")
          ACTION="delete"
          ;;
        *)
         echo "Invalid option: --$OPTARG" >&2
         exit 1
      esac
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done

if [[ -z "$REGION" ]]; then
  REGION=${AWS_DEFAULT_REGION}
fi

if [[ -z "$TYPE" ]]; then
  printf "${RED}Error: type must be provided\n${NC}" >&2
  usage
  exit 1
else
  if [[ "$TYPE" != "eks" ]]; then
    printf "${RED}Error: type '$TYPE' is not supported\n${NC}" >&2
    usage
    exit 1
  fi
fi


  if [[ -z "$NAME" ]]; then
    printf "${RED}Error: name must be provided\n${NC}" >&2
    usage
    exit 1
  fi

  if [[ -z "$ACTION" ]]; then
    configure_eks
  else
    delete_config
  fi

  exit 0
